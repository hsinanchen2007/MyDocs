//linkedList.cpp */
#include <iostream>
#include <iomanip>
using namespace std;

void show();
void insert();
void del();
void search();

struct Node
{
    char name[20];
    double score;
    Node *link;
};

Node *head, *current, *previous, *ptr;

int main()
{
    head = new Node;
    head->link = NULL;
    
    char choice;
    cout << "i: [INSERT]" << endl;
    cout << "d: [DELETE]" << endl;
    cout << "s: [SHOW]" << endl;
    cout << "q: [EXIT]" << endl;
    cout << endl;
   
    while (1) {
        cout << "請輸入選項: ";
        cin >> choice;
        switch (choice) {
            case 'i':
                    insert();
                    break;
            case 'd':
                    del();
                    break;
            case 's':
                    show();
                    break;
            case 'q': cout << "\nBye Bye !\n";
                    exit(1);
            default : cout << "錯誤選項\n\n";
         }
    }

    return 0;
}

void insert()
{
    ptr = new Node;
    cout << "請輸入姓名: ";
    cin >> ptr->name;
    cout << "請輸入成績: ";
    cin >> ptr->score;
    
    previous = head;
    current = head->link;
    while(current != NULL && current->score < ptr->score) {
        previous = current;
        current = current->link;
    }
      
    //insert a node into linked list
    ptr->link = current;
    previous->link = ptr;
    cout << "Insert OK" << endl << endl;
}

void del()
{
    char delName[15];
    cout << "請輸入欲刪除的姓名: ";
    cin >> delName;
    
    previous = head;
    current = previous->link;
    while(current != NULL && strcmp(current->name, delName) != 0) {
        previous = current;
        current = current->link;
    }
    
    if (current != NULL ) {
        previous->link = current->link;
        delete current;
        cout << delName << "已被刪除" << endl << endl;
    }
    else {
        cout << delName << " 不存在!\n\n";
    }
}

void show()
{
    current = head->link;
    cout << fixed << setprecision(2);
    cout << "\nName" << "           score" << endl;
    while (current != NULL) {
        cout << setw(15) << left << current->name << setw(6) 
             << current->score;
        current = current->link;
        cout << endl;
    }
    cout << endl;
 }
