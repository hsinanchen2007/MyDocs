void dfs(std::vector<T> state, std::vector<std::vector<T>>& res) {
    if (isSolution(state)) {
        // add a copy of the state to the result
        res.emplace_back(std::vector<T>(state));
        return;
    }
    for (auto choice : choices) {
        state.emplace_back(choice);
        dfs(state, res);
        state.pop();
    }
}
